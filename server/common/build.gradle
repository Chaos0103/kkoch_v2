buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

configurations {
    querydsl.extendsFrom compileClasspath
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //database driver
    runtimeOnly 'com.h2database:h2'

    //querydsl
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // testFixture 필요 의존성 추가
    testFixturesImplementation 'org.springframework.boot:spring-boot-starter-test'
    testFixturesImplementation 'io.rest-assured:rest-assured:5.3.2'
    testFixturesImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testFixturesImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'
}

def querydslDir = "$buildDir/generated/querydsl"
tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}
sourceSets {
    main.java.srcDirs += [querydslDir]
}
clean {
    delete file(querydslDir)
}